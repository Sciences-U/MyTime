<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class BackconParametresCongresBundleEntityPartnersProxy extends \Backcon\Parametres\CongresBundle\Entity\Partners implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setUrl($url)
    {
        $this->__load();
        return parent::setUrl($url);
    }

    public function getUrl()
    {
        $this->__load();
        return parent::getUrl();
    }

    public function setLogin($login)
    {
        $this->__load();
        return parent::setLogin($login);
    }

    public function getLogin()
    {
        $this->__load();
        return parent::getLogin();
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function setDebug($debug)
    {
        $this->__load();
        return parent::setDebug($debug);
    }

    public function getDebug()
    {
        $this->__load();
        return parent::getDebug();
    }

    public function setTrace($trace)
    {
        $this->__load();
        return parent::setTrace($trace);
    }

    public function getTrace()
    {
        $this->__load();
        return parent::getTrace();
    }

    public function setProxyHost($proxyHost)
    {
        $this->__load();
        return parent::setProxyHost($proxyHost);
    }

    public function getProxyHost()
    {
        $this->__load();
        return parent::getProxyHost();
    }

    public function setProxyPort($proxyPort)
    {
        $this->__load();
        return parent::setProxyPort($proxyPort);
    }

    public function getProxyPort()
    {
        $this->__load();
        return parent::getProxyPort();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'url', 'login', 'password', 'debug', 'trace', 'proxy_host', 'proxy_port');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}